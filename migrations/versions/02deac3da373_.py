"""empty message

Revision ID: 02deac3da373
Revises: de7ee29a3fe9
Create Date: 2021-04-20 22:36:51.208594

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '02deac3da373'
down_revision = 'de7ee29a3fe9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sd19_status_privileges')
    op.drop_table('sd13_user_groups')
    op.drop_index('ix_sd10_customers_name', table_name='sd10_customers')
    op.drop_table('sd10_customers')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sd10_customers',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('sd10_customers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Name'),
    sa.Column('display_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='Display name'),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True, comment='Comment'),
    sa.Column('status', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False, comment='Status'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='Update time'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Vendor of customer'),
    sa.Column('issue_namespace', sa.VARCHAR(length=50), server_default=sa.text("'CUSTOM-{datetime:%%Y%%m%%d}-{serial_no:05d}'::character varying"), autoincrement=False, nullable=False, comment='Issue number namespace'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd10_customers_cust_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd10_customers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_sd10_customers_name', 'sd10_customers', ['name'], unique=True)
    op.create_table('sd13_user_groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), autoincrement=False, nullable=False, comment='Name'),
    sa.Column('display_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='Display name'),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True, comment='Comment'),
    sa.Column('create_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Create time'),
    sa.Column('update_time', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='Update time'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Customer id'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd13_user_groups_cust_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd13_user_groups_pkey'),
    sa.UniqueConstraint('cust_id', 'name', name='sd13_user_groups_cust_id_name_key')
    )
    op.create_table('sd19_status_privileges',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False, comment='authorization role, ex: admin, user'),
    sa.Column('status_from', sa.INTEGER(), autoincrement=False, nullable=True, comment='Current state'),
    sa.Column('status_to', sa.INTEGER(), autoincrement=False, nullable=True, comment='Next state'),
    sa.Column('cust_id', sa.INTEGER(), autoincrement=False, nullable=True, comment='Customer id'),
    sa.ForeignKeyConstraint(['cust_id'], ['sd10_customers.id'], name='sd19_status_privileges_cust_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sd19_status_privileges_pkey')
    )
    # ### end Alembic commands ###
